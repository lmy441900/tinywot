; PlatformIO Project Configuration File.
;
; Usually, this file describes a standalone application that runs on its
; supported platforms. TinyWoT is only a library, so this file only
; contains a (default) environment for invoking unit tests and static
; code analysis on the current machine.
;
; SPDX-FileCopyrightText: 2023 Junde Yhi <junde@yhi.moe>
; SPDX-License-Identifier: CC0-1.0

[platformio]
default_envs = test_native

; Run unit tests on the local build machine.
[env:test_native]
platform = native
build_type = test

; These options will be passed on to compiler invocations on compliation
; units (individual files).
;
; Note that PlatformIO filters out `-Wl,xxx` options and gives them only
; to the GCC invocation linking an executable. The options we supply are
; only recognized by GCC and not LD, so we cannot use this silly
; mechanism. Instead, `extra_scripts` is used to inject link-time
; options. See below.
build_flags = -std=c99 -g -fsanitize=address,undefined -Wall -Wextra -Wpedantic

; Build code in `src/` as well. See:
; https://docs.platformio.org/en/latest/advanced/unit-testing/structure/shared-code.html
test_build_src = true

; This also enables static code analysis.
check_tool = cppcheck

; These checks are ignored:
;
; - any one that is marked inline with a cppcheck-suppress comment.
; - missingIncludeSystem: "Cppcheck does not need standard library
;   headers to get proper results."
; - unusedFunction: we're a library mate.
;
; These addons are enabled for enhanced checks:
;
; - cert: Check SEI CERT C Coding Standard compliance. See:
;   https://wiki.sei.cmu.edu/confluence/display/c/SEI+CERT+C+Coding+Standard
check_flags =
  cppcheck: --language=c --std=c99 --enable=all
    --inline-suppr --suppress=missingIncludeSystem --suppress=unusedFunction
    --addon=cert

; Run unit tests on an Arduino Uno Rev3 board, which has an ATmega328p MCU.
[env:test_uno]
platform = atmelavr
framework = arduino
board = uno

build_type = test
build_flags = -std=c99 -g -Wall -Wextra -Wpedantic
test_build_src = true
